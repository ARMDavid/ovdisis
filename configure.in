dnl Process this file with autoconf to produce a configure script.
AC_INIT(otestis.c)

. $srcdir/OVDISIS-VERSION

dnl libtool versioning
LT_RELEASE=$OVDISIS_MAJOR_VERSION.$OVDISIS_MINOR_VERSION
LT_CURRENT=`expr $OVDISIS_MAJOR_VERSION + $OVDISIS_MINOR_VERSION`
LT_REVISION=$OVDISIS_MICRO_VERSION
LT_AGE=$OVDISIS_MINOR_VERSION
LT_VERSION_INFO="-version-info $LT_CURRENT:$LT_REVISION:$LT_AGE"

dnl Check system type
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_LIBTOOL

dnl Use this instead of AC_PROG_RANLIB because
dnl this works with cross-compiling.
AC_CHECK_TOOL(RANLIB, ranlib, :)

dnl Checks for header files.
AC_HEADER_STDC
dnl AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
dnl AC_C_CONST
dnl AC_C_INLINE
dnl AC_TYPE_OFF_T
dnl AC_HEADER_TIME

dnl Check for standard types
OSIS_CHECK_TYPES

if test x$target_os = xmint; then
  build_bindings_only=true
  use_libtool=false
  echo "Target OS is MiNT: Will only build VDI bindings"
else
  build_bindings_only=false
  use_libtool=true

  AC_CHECK_LIB(m,main)
  AC_CHECK_LIB(pthread,pthread_create)
  AC_CHECK_LIB(dl,dlopen)

dnl Decide which visuals to build
  old_LIBS=${LIBS}
  old_CFLAGS=${CFLAGS}


  AC_ARG_ENABLE(ggi, [  --disable-ggi       Do not check for GGI],
                    ,
  [AC_CHECK_LIB(ggi,ggiInit,
     AC_CHECK_HEADER(ggi/ggi.h,[
       AC_DEFINE(HAVE_LIBGGI)
       AC_DEFINE(HAVE_GGI_H)
       build_ggi_visual=true
     ])
   )
  ])

  AC_ARG_ENABLE(mw, [  --disable-mw        Do not check for Microwindows],
                    ,
  [AC_CHECK_LIB(mw,mwFoo,
     AC_CHECK_HEADER(mw/mw.h,[
       AC_DEFINE(HAVE_LIBMW)
       AC_DEFINE(HAVE_MW_H)
       build_mw_visual=true
     ])
   )
  ])

  ifdef([AM_CHECK_LIBOFBIS], 
      [AM_CHECK_LIBOFBIS(0.1.0, , 
        [AC_MSG_WARN([oFBis user interface will not be used.])])], 
      [AC_MSG_WARN([oFBis user interface will not be used.])])

  LIBS=${old_LIBS}
  CFLAGS=${old_CFLAGS}

  AVAILABLE_VISUALS=
  if test "x${OFBIS_LIBS}" != "x"
  then
      AVAILABLE_VISUALS="${AVAILABLE_VISUALS} ofbis"
      AC_SUBST(OFBIS_LIBS)
      AC_SUBST(OFBIS_CFLAGS)
  fi

  if test "x${build_ggi_visual}" != "x"
  then
      AVAILABLE_VISUALS="${AVAILABLE_VISUALS} ggi"
  fi

  if test "x${build_mw_visual}" != "x"
  then
      AVAILABLE_VISUALS="${AVAILABLE_VISUALS} mw"
  fi

  AC_MSG_CHECKING(which visuals to build)
  AC_MSG_RESULT(${AVAILABLE_VISUALS})
fi

dnl Set CFLAGS
dnl CFLAGS="$CFLAGS -Wall -O2 -pipe -fomit-frame-pointer -fno-strength-reduce"
CFLAGS="$CFLAGS -Wall"

dnl Decide how to build the sources
AM_CONDITIONAL(BUILD_BINDINGS_ONLY, test x$build_bindings_only = xtrue)
AM_CONDITIONAL(USE_LIBTOOL, test x$use_libtool = xtrue)

OSISINCLUDE=${includedir}/osis
AC_SUBST(OSISINCLUDE)

VISUALSDIR=${libdir}/ovdisis/${OVDISIS_VERSION}
AC_SUBST(VISUALSDIR)
AC_SUBST(AVAILABLE_VISUALS)

AC_SUBST(OVDISIS_VERSION)
AC_SUBST(LT_VERSION_INFO)

AC_OUTPUT(fntread/Makefile src/Makefile src/visuals/Makefile src/visuals/ggi/Makefile src/visuals/mw/Makefile src/visuals/ofbis/Makefile src/vdibind.h vdi_dump/Makefile Makefile ovdisis.m4 ovdisis-config)
